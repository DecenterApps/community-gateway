{
  "contractName": "NEC",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalPledgedFees",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "reducePledgedFees",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "burningEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "pledgeFees",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cloneTokenName",
          "type": "string"
        },
        {
          "name": "_cloneDecimalUnits",
          "type": "uint8"
        },
        {
          "name": "_cloneTokenSymbol",
          "type": "string"
        },
        {
          "name": "_snapshotBlock",
          "type": "uint256"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "createCloneToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentSnapShotBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalPledgedFeesAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "destroyTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "enableTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenFactory",
          "type": "address"
        },
        {
          "name": "efxVaultWallet",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_cloneToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_snapshotBlock",
          "type": "uint256"
        }
      ],
      "name": "NewCloneToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_burningEnabled",
          "type": "bool"
        }
      ],
      "name": "enableBurning",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokensToBurn",
          "type": "uint256"
        }
      ],
      "name": "burnAndRetrieve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60c0604052600760808190527f4546585f302e310000000000000000000000000000000000000000000000000060a090815262000040916004919062000868565b503480156200004e57600080fd5b5060405160408062002649833981018060405260408110156200007057600080fd5b508051602091820151604080518082018252601581527f45746866696e6578204e656374617220546f6b656e00000000000000000000008186019081528251808401909352600383527f4e45430000000000000000000000000000000000000000000000000000000000958301959095526000805433600160a060020a0319918216178255600d8054909116600160a060020a038716179055815194959394869491938493926012926001916200012a9183919062000868565b506002805460ff191660ff851617905581516200014f90600390602085019062000868565b5060058054600160a060020a031916600160a060020a039790971696909617909555505050600655600b805460ff19169115159190911790555043600755620001ae816b033b2e3c9fd0803ce8000000640100000000620001cc810204565b50620001c46000640100000000620002c9810204565b505062000936565b60008054600160a060020a03163314620001e557600080fd5b6000620001fa64010000000062000313810204565b90508281018111156200020c57600080fd5b600062000222856401000000006200032f810204565b90508381018111156200023457600080fd5b6200024c600a8386016401000000006200034e810204565b600160a060020a03851660009081526008602052604090206200027b908286016401000000006200034e810204565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001925050505b92915050565b600054600160a060020a03163314620002e157600080fd5b600d8054911515740100000000000000000000000000000000000000000260a060020a60ff0219909216919091179055565b6000620003294364010000000062000440810204565b90505b90565b60006200034682436401000000006200056b810204565b90505b919050565b8154158062000384575081544390839060001981019081106200036d57fe5b6000918252602090912001546001608060020a0316105b15620003f45781546000908390620003a08260018301620008ed565b81548110620003ab57fe5b600091825260209091200180546001608060020a03848116700100000000000000000000000000000000024382166001608060020a03199093169290921716179055506200043c565b8154600090839060001981019081106200040a57fe5b600091825260209091200180546001608060020a03808516700100000000000000000000000000000000029116179055505b5050565b600a54600090158062000477575081600a60008154811015156200046057fe5b6000918252602090912001546001608060020a0316115b156200054d57600554600160a060020a0316156200054457600554600654600160a060020a039091169063981b24d090620004bd908590640100000000620006ef810204565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b1580156200050e57600080fd5b505afa15801562000523573d6000803e3d6000fd5b505050506040513d60208110156200053a57600080fd5b5051905062000349565b50600062000349565b62000563600a8364010000000062000709810204565b905062000349565b600160a060020a0382166000908152600860205260408120541580620005c95750600160a060020a038316600090815260086020526040812080548492908110620005b257fe5b6000918252602090912001546001608060020a0316115b15620006ba57600554600160a060020a031615620006b157600554600654600160a060020a0390911690634ee2cd7e90859062000611908690640100000000620006ef810204565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a031681526020018281526020019250505060206040518083038186803b1580156200067b57600080fd5b505afa15801562000690573d6000803e3d6000fd5b505050506040513d6020811015620006a757600080fd5b50519050620002c3565b506000620002c3565b600160a060020a0383166000908152600860205260409020620006e7908364010000000062000709810204565b9050620002c3565b600081831062000700578162000702565b825b9392505050565b815460009015156200071e57506000620002c3565b8254839060001981019081106200073157fe5b6000918252602090912001546001608060020a0316821062000791578254839060001981019081106200076057fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a03169050620002c3565b826000815481101515620007a157fe5b6000918252602090912001546001608060020a0316821015620007c757506000620002c3565b8254600090600019015b8181111562000827578454600283830160010104908590879083908110620007f557fe5b6000918252602090912001546001608060020a031611620008195780925062000820565b6001810391505b50620007d1565b84828154811015156200083657fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031695945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620008ab57805160ff1916838001178555620008db565b82800160010185558215620008db579182015b82811115620008db578251825591602001919060010190620008be565b50620008e992915062000919565b5090565b81548183558181111562000914576000838152602090206200091491810190830162000919565b505050565b6200032c91905b80821115620008e9576000815560010162000920565b611d0380620009466000396000f3fe6080604052600436106101715763ffffffff60e060020a60003504166306fdde038114610231578063095ea7b3146102bb578063176345141461030857806318160ddd1461032f57806323b872dd14610344578063311325bd14610387578063313ce5671461039c5780633cebb823146103c7578063486575a5146103fa5780634d754715146104245780634ee2cd7e146104395780634f37edfd146104725780634fa7e3531461049c57806354fd4d50146104c65780636638c087146104db57806370a082311461064357806380a5400114610676578063827f32c01461068b57806395d89b41146106c4578063981b24d0146106d9578063a9059cbb14610703578063b45dd8731461073c578063bef97c8714610768578063c5bcc4f11461077d578063c6d1d23d14610792578063cae9ca51146107bc578063d3ce77fe14610884578063dd62ed3e146108bd578063e77772fe146108f8578063f41e60c51461090d578063f77c479114610939575b60005461018690600160a060020a031661094e565b151561019157600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101f757600080fd5b505af115801561020b573d6000803e3d6000fd5b50505050506040513d602081101561022257600080fd5b5051151561022f57600080fd5b005b34801561023d57600080fd5b50610246610978565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610280578181015183820152602001610268565b50505050905090810190601f1680156102ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c757600080fd5b506102f4600480360360408110156102de57600080fd5b50600160a060020a038135169060200135610a05565b604080519115158252519081900360200190f35b34801561031457600080fd5b5061031d610b83565b60408051918252519081900360200190f35b34801561033b57600080fd5b5061031d610b89565b34801561035057600080fd5b506102f46004803603606081101561036757600080fd5b50600160a060020a03813581169160208101359091169060400135610b9a565b34801561039357600080fd5b5061031d610c5b565b3480156103a857600080fd5b506103b1610c66565b6040805160ff9092168252519081900360200190f35b3480156103d357600080fd5b5061022f600480360360208110156103ea57600080fd5b5035600160a060020a0316610c6f565b34801561040657600080fd5b506102f46004803603602081101561041d57600080fd5b5035610cb5565b34801561043057600080fd5b506102f4610cfc565b34801561044557600080fd5b5061031d6004803603604081101561045c57600080fd5b50600160a060020a038135169060200135610d1d565b34801561047e57600080fd5b506102f46004803603602081101561049557600080fd5b5035610e68565b3480156104a857600080fd5b506102f4600480360360208110156104bf57600080fd5b5035610fb2565b3480156104d257600080fd5b50610246610ff2565b3480156104e757600080fd5b50610627600480360360a08110156104fe57600080fd5b81019060208101813564010000000081111561051957600080fd5b82018360208201111561052b57600080fd5b8035906020019184600183028401116401000000008311171561054d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929560ff8535169590949093506040810192506020013590506401000000008111156105ab57600080fd5b8201836020820111156105bd57600080fd5b803590602001918460018302840111640100000000831117156105df57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060200135151561104d565b60408051600160a060020a039092168252519081900360200190f35b34801561064f57600080fd5b5061031d6004803603602081101561066657600080fd5b5035600160a060020a03166112b0565b34801561068257600080fd5b506106276112bc565b34801561069757600080fd5b506102f4600480360360408110156106ae57600080fd5b50600160a060020a0381351690602001356112cb565b3480156106d057600080fd5b50610246611385565b3480156106e557600080fd5b5061031d600480360360208110156106fc57600080fd5b50356113e0565b34801561070f57600080fd5b506102f46004803603604081101561072657600080fd5b50600160a060020a0381351690602001356114d2565b34801561074857600080fd5b5061022f6004803603602081101561075f57600080fd5b503515156114f1565b34801561077457600080fd5b506102f4611548565b34801561078957600080fd5b5061031d611551565b34801561079e57600080fd5b5061031d600480360360208110156107b557600080fd5b5035611557565b3480156107c857600080fd5b506102f4600480360360608110156107df57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561080f57600080fd5b82018360208201111561082157600080fd5b8035906020019184600183028401116401000000008311171561084357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506115d0945050505050565b34801561089057600080fd5b506102f4600480360360408110156108a757600080fd5b50600160a060020a0381351690602001356116eb565b3480156108c957600080fd5b5061031d600480360360408110156108e057600080fd5b50600160a060020a03813581169160200135166117a1565b34801561090457600080fd5b506106276117cc565b34801561091957600080fd5b5061022f6004803603602081101561093057600080fd5b503515156117db565b34801561094557600080fd5b50610627611805565b600080600160a060020a038316151561096b576000915050610973565b50506000813b115b919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b505050505081565b600b5460009060ff161515610a1957600080fd5b811580610a475750336000908152600960209081526040808320600160a060020a0387168452909152902054155b1515610a5257600080fd5b600054610a6790600160a060020a031661094e565b15610b1b5760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b505050506040513d6020811015610b0e57600080fd5b50511515610b1b57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b6000610b94436113e0565b90505b90565b60008054600160a060020a03163314610c4657600b5460ff161515610bbe57600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020546000191115610c4657600160a060020a0384166000908152600960209081526040808320338452909152902054821115610c1b57600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b610c51848484611814565b5060019392505050565b6000610b9443611557565b60025460ff1681565b600054600160a060020a03163314610c8657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008054600160a060020a03163314610ccd57600080fd5b6000610cd7610c5b565b905082811015610ce657600080fd5b610cf3600c848303611a1f565b50600192915050565b600d5474010000000000000000000000000000000000000000900460ff1681565b600160a060020a0382166000908152600860205260408120541580610d795750600160a060020a038316600090815260086020526040812080548492908110610d6257fe5b6000918252602090912001546001608060020a0316115b15610e3f57600554600160a060020a031615610e3757600554600654600160a060020a0390911690634ee2cd7e908590610db4908690611b12565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a031681526020018281526020019250505060206040518083038186803b158015610e0457600080fd5b505afa158015610e18573d6000803e3d6000fd5b505050506040513d6020811015610e2e57600080fd5b50519050610b7d565b506000610b7d565b600160a060020a0383166000908152600860205260409020610e619083611b2a565b9050610b7d565b600d5460009074010000000000000000000000000000000000000000900460ff161515610e9457600080fd5b6000610ea03343610d1d565b905082811015610eb4576000915050610973565b600054610ec990600160a060020a031661094e565b15610f735760008054604080517f45a1b92c000000000000000000000000000000000000000000000000000000008152336004820152602481018790529051600160a060020a03909216926345a1b92c926044808401936020939083900390910190829087803b158015610f3c57600080fd5b505af1158015610f50573d6000803e3d6000fd5b505050506040513d6020811015610f6657600080fd5b50511515610f7357600080fd5b60408051848152905133917f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7919081900360200190a250600192915050565b60008054600160a060020a03163314610fca57600080fd5b6000610fd4610c5b565b9050828101811115610fe557600080fd5b610cf3600c848301611a1f565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b600082151561105a574392505b6000600d60009054906101000a9004600160a060020a0316600160a060020a0316635b7b72c130868a8a8a896040518763ffffffff1660e060020a0281526004018087600160a060020a0316600160a060020a03168152602001868152602001806020018560ff1660ff1681526020018060200184151515158152602001838103835287818151815260200191508051906020019080838360005b8381101561110d5781810151838201526020016110f5565b50505050905090810190601f16801561113a5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561116d578181015183820152602001611155565b50505050905090810190601f16801561119a5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156111bf57600080fd5b505af11580156111d3573d6000803e3d6000fd5b505050506040513d60208110156111e957600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b15801561124f57600080fd5b505af1158015611263573d6000803e3d6000fd5b5050604080518781529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a29695505050505050565b6000610b7d8243610d1d565b600554600160a060020a031681565b60008054600160a060020a031633146112e357600080fd5b60006112ed610b89565b90508281018111156112fe57600080fd5b6000611309856112b0565b905083810181111561131a57600080fd5b611327600a858401611a1f565b600160a060020a038516600090815260086020526040902061134b90828601611a1f565b604080518581529051600160a060020a03871691600091600080516020611cb88339815191529181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b600a546000901580611415575081600a60008154811015156113fe57fe5b6000918252602090912001546001608060020a0316115b156114c057600554600160a060020a0316156114b857600554600654600160a060020a039091169063981b24d09061144e908590611b12565b6040518263ffffffff1660e060020a0281526004018082815260200191505060206040518083038186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d60208110156114af57600080fd5b50519050610973565b506000610973565b6114cb600a83611b2a565b9050610973565b600b5460009060ff1615156114e657600080fd5b610cf3338484611814565b600054600160a060020a0316331461150857600080fd5b600d8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600b5460ff1681565b60065481565b600c54600090158061158c575081600c600081548110151561157557fe5b6000918252602090912001546001608060020a0316115b156115c557600554600160a060020a0316156114b857600554600654600160a060020a039091169063c6d1d23d9061144e908590611b12565b6114cb600c83611b2a565b60006115dc8484610a05565b15156115e757600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b8381101561167a578181015183820152602001611662565b50505050905090810190601f1680156116a75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156116c957600080fd5b505af11580156116dd573d6000803e3d6000fd5b506001979650505050505050565b60008054600160a060020a0316331461170357600080fd5b600061170d610b89565b90508281101561171c57600080fd5b6000611727856112b0565b90508381101561173657600080fd5b611743600a858403611a1f565b600160a060020a038516600090815260086020526040902061176790858303611a1f565b604080518581529051600091600160a060020a03881691600080516020611cb88339815191529181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600d54600160a060020a031681565b600054600160a060020a031633146117f257600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b8015156118595781600160a060020a031683600160a060020a0316600080516020611cb8833981519152836040518082815260200191505060405180910390a3611a1a565b600654431161186757600080fd5b600160a060020a038216158015906118885750600160a060020a0382163014155b151561189357600080fd5b600061189f8443610d1d565b9050818110156118ae57600080fd5b6000546118c390600160a060020a031661094e565b156119795760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015287811660248301526044820187905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561194257600080fd5b505af1158015611956573d6000803e3d6000fd5b505050506040513d602081101561196c57600080fd5b5051151561197957600080fd5b600160a060020a038416600090815260086020526040902061199d90838303611a1f565b60006119a98443610d1d565b90508281018111156119ba57600080fd5b600160a060020a03841660009081526008602052604090206119de90828501611a1f565b83600160a060020a031685600160a060020a0316600080516020611cb8833981519152856040518082815260200191505060405180910390a350505b505050565b81541580611a5357508154439083906000198101908110611a3c57fe5b6000918252602090912001546001608060020a0316105b15611ac75781546000908390611a6c8260018301611c7a565b81548110611a7657fe5b600091825260209091200180546001608060020a03848116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff19909316929092171617905550611b0e565b815460009083906000198101908110611adc57fe5b600091825260209091200180546001608060020a03808516700100000000000000000000000000000000029116179055505b5050565b6000818310611b215781611b23565b825b9392505050565b81546000901515611b3d57506000610b7d565b825483906000198101908110611b4f57fe5b6000918252602090912001546001608060020a03168210611bac57825483906000198101908110611b7c57fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a03169050610b7d565b826000815481101515611bbb57fe5b6000918252602090912001546001608060020a0316821015611bdf57506000610b7d565b8254600090600019015b81811115611c3a578454600283830160010104908590879083908110611c0b57fe5b6000918252602090912001546001608060020a031611611c2d57809250611c34565b6001810391505b50611be9565b8482815481101515611c4857fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031695945050505050565b815481835581811115611a1a57600083815260209020611a1a918101908301610b9791905b80821115611cb35760008155600101611c9f565b509056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820ae7406ba94604418e43d159b9e646431a6ed9117fe36fb0da5c495485c94fad80029",
  "deployedBytecode": "0x6080604052600436106101715763ffffffff60e060020a60003504166306fdde038114610231578063095ea7b3146102bb578063176345141461030857806318160ddd1461032f57806323b872dd14610344578063311325bd14610387578063313ce5671461039c5780633cebb823146103c7578063486575a5146103fa5780634d754715146104245780634ee2cd7e146104395780634f37edfd146104725780634fa7e3531461049c57806354fd4d50146104c65780636638c087146104db57806370a082311461064357806380a5400114610676578063827f32c01461068b57806395d89b41146106c4578063981b24d0146106d9578063a9059cbb14610703578063b45dd8731461073c578063bef97c8714610768578063c5bcc4f11461077d578063c6d1d23d14610792578063cae9ca51146107bc578063d3ce77fe14610884578063dd62ed3e146108bd578063e77772fe146108f8578063f41e60c51461090d578063f77c479114610939575b60005461018690600160a060020a031661094e565b151561019157600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101f757600080fd5b505af115801561020b573d6000803e3d6000fd5b50505050506040513d602081101561022257600080fd5b5051151561022f57600080fd5b005b34801561023d57600080fd5b50610246610978565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610280578181015183820152602001610268565b50505050905090810190601f1680156102ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c757600080fd5b506102f4600480360360408110156102de57600080fd5b50600160a060020a038135169060200135610a05565b604080519115158252519081900360200190f35b34801561031457600080fd5b5061031d610b83565b60408051918252519081900360200190f35b34801561033b57600080fd5b5061031d610b89565b34801561035057600080fd5b506102f46004803603606081101561036757600080fd5b50600160a060020a03813581169160208101359091169060400135610b9a565b34801561039357600080fd5b5061031d610c5b565b3480156103a857600080fd5b506103b1610c66565b6040805160ff9092168252519081900360200190f35b3480156103d357600080fd5b5061022f600480360360208110156103ea57600080fd5b5035600160a060020a0316610c6f565b34801561040657600080fd5b506102f46004803603602081101561041d57600080fd5b5035610cb5565b34801561043057600080fd5b506102f4610cfc565b34801561044557600080fd5b5061031d6004803603604081101561045c57600080fd5b50600160a060020a038135169060200135610d1d565b34801561047e57600080fd5b506102f46004803603602081101561049557600080fd5b5035610e68565b3480156104a857600080fd5b506102f4600480360360208110156104bf57600080fd5b5035610fb2565b3480156104d257600080fd5b50610246610ff2565b3480156104e757600080fd5b50610627600480360360a08110156104fe57600080fd5b81019060208101813564010000000081111561051957600080fd5b82018360208201111561052b57600080fd5b8035906020019184600183028401116401000000008311171561054d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929560ff8535169590949093506040810192506020013590506401000000008111156105ab57600080fd5b8201836020820111156105bd57600080fd5b803590602001918460018302840111640100000000831117156105df57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060200135151561104d565b60408051600160a060020a039092168252519081900360200190f35b34801561064f57600080fd5b5061031d6004803603602081101561066657600080fd5b5035600160a060020a03166112b0565b34801561068257600080fd5b506106276112bc565b34801561069757600080fd5b506102f4600480360360408110156106ae57600080fd5b50600160a060020a0381351690602001356112cb565b3480156106d057600080fd5b50610246611385565b3480156106e557600080fd5b5061031d600480360360208110156106fc57600080fd5b50356113e0565b34801561070f57600080fd5b506102f46004803603604081101561072657600080fd5b50600160a060020a0381351690602001356114d2565b34801561074857600080fd5b5061022f6004803603602081101561075f57600080fd5b503515156114f1565b34801561077457600080fd5b506102f4611548565b34801561078957600080fd5b5061031d611551565b34801561079e57600080fd5b5061031d600480360360208110156107b557600080fd5b5035611557565b3480156107c857600080fd5b506102f4600480360360608110156107df57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561080f57600080fd5b82018360208201111561082157600080fd5b8035906020019184600183028401116401000000008311171561084357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506115d0945050505050565b34801561089057600080fd5b506102f4600480360360408110156108a757600080fd5b50600160a060020a0381351690602001356116eb565b3480156108c957600080fd5b5061031d600480360360408110156108e057600080fd5b50600160a060020a03813581169160200135166117a1565b34801561090457600080fd5b506106276117cc565b34801561091957600080fd5b5061022f6004803603602081101561093057600080fd5b503515156117db565b34801561094557600080fd5b50610627611805565b600080600160a060020a038316151561096b576000915050610973565b50506000813b115b919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b505050505081565b600b5460009060ff161515610a1957600080fd5b811580610a475750336000908152600960209081526040808320600160a060020a0387168452909152902054155b1515610a5257600080fd5b600054610a6790600160a060020a031661094e565b15610b1b5760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b505050506040513d6020811015610b0e57600080fd5b50511515610b1b57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b6000610b94436113e0565b90505b90565b60008054600160a060020a03163314610c4657600b5460ff161515610bbe57600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020546000191115610c4657600160a060020a0384166000908152600960209081526040808320338452909152902054821115610c1b57600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b610c51848484611814565b5060019392505050565b6000610b9443611557565b60025460ff1681565b600054600160a060020a03163314610c8657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008054600160a060020a03163314610ccd57600080fd5b6000610cd7610c5b565b905082811015610ce657600080fd5b610cf3600c848303611a1f565b50600192915050565b600d5474010000000000000000000000000000000000000000900460ff1681565b600160a060020a0382166000908152600860205260408120541580610d795750600160a060020a038316600090815260086020526040812080548492908110610d6257fe5b6000918252602090912001546001608060020a0316115b15610e3f57600554600160a060020a031615610e3757600554600654600160a060020a0390911690634ee2cd7e908590610db4908690611b12565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a031681526020018281526020019250505060206040518083038186803b158015610e0457600080fd5b505afa158015610e18573d6000803e3d6000fd5b505050506040513d6020811015610e2e57600080fd5b50519050610b7d565b506000610b7d565b600160a060020a0383166000908152600860205260409020610e619083611b2a565b9050610b7d565b600d5460009074010000000000000000000000000000000000000000900460ff161515610e9457600080fd5b6000610ea03343610d1d565b905082811015610eb4576000915050610973565b600054610ec990600160a060020a031661094e565b15610f735760008054604080517f45a1b92c000000000000000000000000000000000000000000000000000000008152336004820152602481018790529051600160a060020a03909216926345a1b92c926044808401936020939083900390910190829087803b158015610f3c57600080fd5b505af1158015610f50573d6000803e3d6000fd5b505050506040513d6020811015610f6657600080fd5b50511515610f7357600080fd5b60408051848152905133917f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7919081900360200190a250600192915050565b60008054600160a060020a03163314610fca57600080fd5b6000610fd4610c5b565b9050828101811115610fe557600080fd5b610cf3600c848301611a1f565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b600082151561105a574392505b6000600d60009054906101000a9004600160a060020a0316600160a060020a0316635b7b72c130868a8a8a896040518763ffffffff1660e060020a0281526004018087600160a060020a0316600160a060020a03168152602001868152602001806020018560ff1660ff1681526020018060200184151515158152602001838103835287818151815260200191508051906020019080838360005b8381101561110d5781810151838201526020016110f5565b50505050905090810190601f16801561113a5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561116d578181015183820152602001611155565b50505050905090810190601f16801561119a5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156111bf57600080fd5b505af11580156111d3573d6000803e3d6000fd5b505050506040513d60208110156111e957600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b15801561124f57600080fd5b505af1158015611263573d6000803e3d6000fd5b5050604080518781529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a29695505050505050565b6000610b7d8243610d1d565b600554600160a060020a031681565b60008054600160a060020a031633146112e357600080fd5b60006112ed610b89565b90508281018111156112fe57600080fd5b6000611309856112b0565b905083810181111561131a57600080fd5b611327600a858401611a1f565b600160a060020a038516600090815260086020526040902061134b90828601611a1f565b604080518581529051600160a060020a03871691600091600080516020611cb88339815191529181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b600a546000901580611415575081600a60008154811015156113fe57fe5b6000918252602090912001546001608060020a0316115b156114c057600554600160a060020a0316156114b857600554600654600160a060020a039091169063981b24d09061144e908590611b12565b6040518263ffffffff1660e060020a0281526004018082815260200191505060206040518083038186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d60208110156114af57600080fd5b50519050610973565b506000610973565b6114cb600a83611b2a565b9050610973565b600b5460009060ff1615156114e657600080fd5b610cf3338484611814565b600054600160a060020a0316331461150857600080fd5b600d8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600b5460ff1681565b60065481565b600c54600090158061158c575081600c600081548110151561157557fe5b6000918252602090912001546001608060020a0316115b156115c557600554600160a060020a0316156114b857600554600654600160a060020a039091169063c6d1d23d9061144e908590611b12565b6114cb600c83611b2a565b60006115dc8484610a05565b15156115e757600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b8381101561167a578181015183820152602001611662565b50505050905090810190601f1680156116a75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156116c957600080fd5b505af11580156116dd573d6000803e3d6000fd5b506001979650505050505050565b60008054600160a060020a0316331461170357600080fd5b600061170d610b89565b90508281101561171c57600080fd5b6000611727856112b0565b90508381101561173657600080fd5b611743600a858403611a1f565b600160a060020a038516600090815260086020526040902061176790858303611a1f565b604080518581529051600091600160a060020a03881691600080516020611cb88339815191529181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600d54600160a060020a031681565b600054600160a060020a031633146117f257600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b8015156118595781600160a060020a031683600160a060020a0316600080516020611cb8833981519152836040518082815260200191505060405180910390a3611a1a565b600654431161186757600080fd5b600160a060020a038216158015906118885750600160a060020a0382163014155b151561189357600080fd5b600061189f8443610d1d565b9050818110156118ae57600080fd5b6000546118c390600160a060020a031661094e565b156119795760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015287811660248301526044820187905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561194257600080fd5b505af1158015611956573d6000803e3d6000fd5b505050506040513d602081101561196c57600080fd5b5051151561197957600080fd5b600160a060020a038416600090815260086020526040902061199d90838303611a1f565b60006119a98443610d1d565b90508281018111156119ba57600080fd5b600160a060020a03841660009081526008602052604090206119de90828501611a1f565b83600160a060020a031685600160a060020a0316600080516020611cb8833981519152856040518082815260200191505060405180910390a350505b505050565b81541580611a5357508154439083906000198101908110611a3c57fe5b6000918252602090912001546001608060020a0316105b15611ac75781546000908390611a6c8260018301611c7a565b81548110611a7657fe5b600091825260209091200180546001608060020a03848116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff19909316929092171617905550611b0e565b815460009083906000198101908110611adc57fe5b600091825260209091200180546001608060020a03808516700100000000000000000000000000000000029116179055505b5050565b6000818310611b215781611b23565b825b9392505050565b81546000901515611b3d57506000610b7d565b825483906000198101908110611b4f57fe5b6000918252602090912001546001608060020a03168210611bac57825483906000198101908110611b7c57fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a03169050610b7d565b826000815481101515611bbb57fe5b6000918252602090912001546001608060020a0316821015611bdf57506000610b7d565b8254600090600019015b81811115611c3a578454600283830160010104908590879083908110611c0b57fe5b6000918252602090912001546001608060020a031611611c2d57809250611c34565b6001810391505b50611be9565b8482815481101515611c4857fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031695945050505050565b815481835581811115611a1a57600083815260209020611a1a918101908301610b9791905b80821115611cb35760008155600101611c9f565b509056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820ae7406ba94604418e43d159b9e646431a6ed9117fe36fb0da5c495485c94fad80029",
  "sourceMap": "2036:33:8:-;54:1587:9;2036:33:8;;54:1587:9;2036:33:8;;;;;;;;;;;;;;:::i;:::-;;87:514:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;87:514:9;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;87:514:9;;;;;;;;4598:741:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;296:23:0;;309:10;-1:-1:-1;;;;;;296:23:0;;;;;;4868:12:8;:48;;;;;-1:-1:-1;;;;;4868:48:8;;;;;4926:17;;87:514:9;;;;;;-1:-1:-1;;;;4598:741:8;366:2:9;;-1:-1:-1;;4926:17:8;;-1:-1:-1;;4598:741:8;4926:17;:::i;:::-;-1:-1:-1;5001:8:8;:24;;-1:-1:-1;;5001:24:8;;;;;;;5080:21;;;;:6;;:21;;;;;:::i;:::-;-1:-1:-1;5157:11:8;:39;;-1:-1:-1;;;;;;5157:39:8;-1:-1:-1;;;;;5157:39:8;;;;;;;;;;;-1:-1:-1;;;5206:19:8;:42;5258:16;:36;;-1:-1:-1;;5258:36:8;;;;;;;;;;-1:-1:-1;5320:12:8;5304:13;:28;504:60:9;519:14;535:28;504:14;;;;:60;:::i;:::-;-1:-1:-1;574:20:9;588:5;574:13;;;;:20;:::i;:::-;87:514;;54:1587;;18822:590:8;18912:4;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;18928:19:8;18950:13;:11;;;;:13;:::i;:::-;18928:35;-1:-1:-1;18981:24:8;;;:42;-1:-1:-1;18981:42:8;18973:51;;;;;;19056:22;19081:17;19091:6;19081:9;;;;:17;:::i;:::-;19056:42;-1:-1:-1;19116:27:8;;;:48;-1:-1:-1;19116:48:8;19108:57;;;;;;19197:62;19214:18;19234:24;;;19197:16;;;;:62;:::i;:::-;-1:-1:-1;;;;;19286:16:8;;;;;;:8;:16;;;;;19269:63;;19304:27;;;19269:16;;;;:63;:::i;:::-;19347:37;;;;;;;;-1:-1:-1;;;;;19347:37:8;;;19364:1;;19347:37;;;;;;;;;19401:4;19394:11;;;;231:1:0;18822:590:8;;;;:::o;783:116:9:-;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;860:14:9;:32;;;;;;;-1:-1:-1;;;;;;860:32:9;;;;;;;;;783:116::o;11920:101:8:-;11964:4;11987:27;12001:12;11987:13;;;;:27;:::i;:::-;11980:34;;11920:101;;:::o;9092:130::-;9148:15;9182:33;9194:6;9202:12;9182:11;;;;:33;:::i;:::-;9175:40;;9092:130;;;;:::o;21856:587::-;21959:18;;:23;;21958:98;;-1:-1:-1;22008:18:8;;22043:12;;21996:11;;-1:-1:-1;;22008:21:8;;;21996:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;21996:44:8;:59;21958:98;21954:483;;;22123:20;;22075:32;;22110:11;;22123:20;22110:11;22123:20;;;;:::i;:::-;22110:35;;;;;;;;;;;;;;;;;22162:48;;-1:-1:-1;;;;;22227:37:8;;;;;22197:12;22162:48;;-1:-1:-1;;;;;;22162:48:8;;;;;;;22227:37;;;;-1:-1:-1;21954:483:8;;;22348:18;;22301:32;;22336:11;;-1:-1:-1;;22348:20:8;;;22336:33;;;;;;;;;;;;;;;22386:37;;-1:-1:-1;;;;;22386:37:8;;;;;;;;;;-1:-1:-1;21954:483:8;21856:587;;:::o;13531:915::-;13966:18;:25;13593:4;;13966:30;;13965:96;;;14048:12;14014:18;14033:1;14014:21;;;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;14014:31:8;:46;13965:96;13961:479;;;14089:11;;-1:-1:-1;;;;;14089:11:8;14081:34;14077:192;;14142:11;;14186:19;;-1:-1:-1;;;;;14142:11:8;;;;:25;;14168:38;;14172:12;;14168:3;;;;:38;:::i;:::-;14142:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14142:65:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14142:65:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14142:65:8;;-1:-1:-1;14135:72:8;;14077:192;-1:-1:-1;14253:1:8;14246:8;;13961:479;14385:44;14396:18;14416:12;14385:10;;;;:44;:::i;:::-;14378:51;;;;12375:943;-1:-1:-1;;;;;12809:16:8;;12460:4;12809:16;;;:8;:16;;;;;:23;:28;;12808:92;;-1:-1:-1;;;;;;12855:16:8;;;;;;:8;:16;;;;;:19;;12887:12;;12855:16;:19;;;;;;;;;;;;;;;:29;-1:-1:-1;;;;;12855:29:8;:44;12808:92;12804:508;;;12928:11;;-1:-1:-1;;;;;12928:11:8;12920:34;12916:231;;12981:11;;13031:19;;-1:-1:-1;;;;;12981:11:8;;;;:23;;13005:6;;13013:38;;13017:12;;13013:3;;;;:38;:::i;:::-;12981:71;;;;;;;;;;;;;-1:-1:-1;;;;;12981:71:8;-1:-1:-1;;;;;12981:71:8;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12981:71:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12981:71:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12981:71:8;;-1:-1:-1;12974:78:8;;12916:231;-1:-1:-1;13131:1:8;13124:8;;12804:508;-1:-1:-1;;;;;13270:16:8;;;;;;:8;:16;;;;;13259:42;;13288:12;13259:10;;;;:42;:::i;:::-;13252:49;;;;22913:95;22965:4;22992:1;22988;:5;:13;;23000:1;22988:13;;;22996:1;22988:13;22981:20;22913:95;-1:-1:-1;;;22913:95:8:o;20877:761::-;20992:18;;20972:4;;20992:23;20988:37;;;-1:-1:-1;21024:1:8;21017:8;;20988:37;21103:18;;21091:11;;-1:-1:-1;;21103:20:8;;;21091:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;21091:43:8;21081:53;;21077:117;;21167:18;;21155:11;;-1:-1:-1;;21167:20:8;;;21155:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;21155:39:8;;-1:-1:-1;21148:46:8;;21077:117;21217:11;21229:1;21217:14;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;21217:24:8;21208:33;;21204:47;;;-1:-1:-1;21250:1:8;21243:8;;21204:47;21346:18;;21313:8;;-1:-1:-1;;21346:20:8;21376:217;21389:3;21383;:9;21376:217;;;21455:16;;21436:1;21420:9;;;21432:1;21420:13;21419:18;;21483:6;;21455:11;;21419:18;;21455:16;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;21455:26:8;:34;21451:132;;21515:3;21509:9;;21451:132;;;21567:1;21563:3;:5;21557:11;;21451:132;21376:217;;;;21609:11;21621:3;21609:16;;;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;21609:22:8;;20877:761;-1:-1:-1;;;;;20877:761:8:o;54:1587:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54:1587:9;;;-1:-1:-1;54:1587:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "54:1587:9:-;;;;;;;;;-1:-1:-1;;;54:1587:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23310:10:8;;23299:22;;-1:-1:-1;;;;;23310:10:8;23299;:22::i;:::-;23291:31;;;;;;;;23356:10;;23340:69;;;;;;23398:10;23340:69;;;;;;-1:-1:-1;;;;;23356:10:8;;;;23340:40;;23387:9;;23340:69;;;;;;;;;;;;;;23387:9;23356:10;23340:69;;;5:2:-1;;;;30:1;27;20:12;5:2;23340:69:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23340:69:8;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23340:69:8;23332:78;;;;;;;;54:1587:9;1810:18:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1810:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1810:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9621:834;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9621:834:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9621:834:8;;;;;;;;;;;;;;;;;;;;;;;;;;;2951:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2951:25:8;;;;;;;;;;;;;;;;;;;;11920:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11920:101:8;;;;6217:790;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6217:790:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6217:790:8;;;;;;;;;;;;;;;;;;14654:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14654:109:8;;;;1890:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1890:21:8;;;;;;;;;;;;;;;;;;;;;;;447:116:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:116:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;447:116:0;-1:-1:-1;;;;;447:116:0;;;16708:263:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16708:263:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16708:263:8;;;681:26:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;681:26:9;;;;12375:943:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12375:943:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12375:943:8;;;;;;;;;905:676:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;905:676:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;905:676:9;;;16202:293:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16202:293:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16202:293:8;;;2036:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2036:33:8;;;;17708:783;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17708:783:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;17708:783:8;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;17708:783:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17708:783:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17708:783:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;17708:783:8;;;;;;;;;;;-1:-1:-1;17708:783:8;;;;-1:-1:-1;17708:783:8;;;;-1:-1:-1;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;17708:783:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17708:783:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17708:783:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;17708:783:8;;-1:-1:-1;;17708:783:8;;;-1:-1:-1;;;17708:783:8;;;;;;;;;;;-1:-1:-1;;;;;17708:783:8;;;;;;;;;;;;;;9092:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9092:130:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9092:130:8;-1:-1:-1;;;;;9092:130:8;;;2650:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2650:30:8;;;;18822:590;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18822:590:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18822:590:8;;;;;;;;;1971:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1971:20:8;;;;13531:915;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13531:915:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13531:915:8;;;5680:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5680:187:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5680:187:8;;;;;;;;;783:116:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;783:116:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;783:116:9;;;;;3530:28:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3530:28:8;;;;2837:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2837:31:8;;;;14981:943;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14981:943:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14981:943:8;;;11438:358;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11438:358:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;11438:358:8;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;11438:358:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11438:358:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;11438:358:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;11438:358:8;;-1:-1:-1;11438:358:8;;-1:-1:-1;;;;;11438:358:8;19642:514;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19642:514:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;19642:514:8;;;;;;;;;10774:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10774:147:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10774:147:8;;;;;;;;;;;3743:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3743:38:8;;;;20379:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20379:124:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20379:124:8;;;;;241:25:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;241:25:0;;;;22614:227:8;22671:4;;-1:-1:-1;;;;;22710:19:8;;;22706:37;;;22738:5;22731:12;;;;;22706:37;-1:-1:-1;;22833:1:8;22784:18;;22828:6;22614:227;;;;:::o;1810:18::-;;;;;;;;;;;;;;;-1:-1:-1;;1810:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9621:834::-;9721:16;;9689:12;;9721:16;;9713:25;;;;;;;;10061:12;;;10060:54;;-1:-1:-1;10087:10:8;10079:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;10079:29:8;;;;;;;;;;:34;10060:54;10052:63;;;;;;;;10209:10;;10198:22;;-1:-1:-1;;;;;10209:10:8;10198;:22::i;:::-;10194:130;;;10260:10;;;10244:68;;;;;;10282:10;10244:68;;;;-1:-1:-1;;;;;10244:68:8;;;;;;;;;;;;;;;10260:10;;;;;10244:37;;:68;;;;;;;;;;;;;;;;;;10260:10;10244:68;;;5:2:-1;;;;30:1;27;20:12;5:2;10244:68:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10244:68:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10244:68:8;10236:77;;;;;;;;10342:10;10334:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;10334:29:8;;;;;;;;;;;;:39;;;10388;;;;;;;10334:29;;10342:10;10388:39;;;;;;;;;;;-1:-1:-1;10444:4:8;9621:834;;;;;:::o;2951:25::-;;;;:::o;11920:101::-;11964:4;11987:27;12001:12;11987:13;:27::i;:::-;11980:34;;11920:101;;:::o;6217:790::-;6305:12;6624:10;;-1:-1:-1;;;;;6624:10:8;6610;:24;6606:333;;6658:16;;;;6650:25;;;;;;;;-1:-1:-1;;;;;6756:14:8;;;;;;:7;:14;;;;;;;;6771:10;6756:26;;;;;;;;-1:-1:-1;;;6752:177:8;;;-1:-1:-1;;;;;6821:14:8;;;;;;:7;:14;;;;;;;;6836:10;6821:26;;;;;;;;:37;-1:-1:-1;6821:37:8;6813:46;;;;;;-1:-1:-1;;;;;6877:14:8;;;;;;:7;:14;;;;;;;;6892:10;6877:26;;;;;;;:37;;;;;;;6752:177;6948:31;6959:5;6966:3;6971:7;6948:10;:31::i;:::-;-1:-1:-1;6996:4:8;6217:790;;;;;:::o;14654:109::-;14703:4;14725:32;14744:12;14725:18;:32::i;1890:21::-;;;;;;:::o;447:116:0:-;218:10;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;529:10;:27;;-1:-1:-1;;529:27:0;-1:-1:-1;;;;;529:27:0;;;;;;;;;;447:116::o;16708:263:8:-;16779:4;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;16794:17:8;16814:18;:16;:18::i;:::-;16794:38;-1:-1:-1;16849:22:8;;;;16841:31;;;;;;16881:64;16898:23;16938:6;16923:12;:21;16881:16;:64::i;:::-;-1:-1:-1;16961:4:8;;16708:263;-1:-1:-1;;16708:263:8:o;681:26:9:-;;;;;;;;;:::o;12375:943:8:-;-1:-1:-1;;;;;12809:16:8;;12460:4;12809:16;;;:8;:16;;;;;:23;:28;;12808:92;;-1:-1:-1;;;;;;12855:16:8;;;;;;:8;:16;;;;;:19;;12887:12;;12855:16;:19;;;;;;;;;;;;;;;:29;-1:-1:-1;;;;;12855:29:8;:44;12808:92;12804:508;;;12928:11;;-1:-1:-1;;;;;12928:11:8;12920:34;12916:231;;12981:11;;13031:19;;-1:-1:-1;;;;;12981:11:8;;;;:23;;13005:6;;13013:38;;13017:12;;13013:3;:38::i;:::-;12981:71;;;;;-1:-1:-1;;;12981:71:8;;;;;;;-1:-1:-1;;;;;12981:71:8;-1:-1:-1;;;;;12981:71:8;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12981:71:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12981:71:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12981:71:8;;-1:-1:-1;12974:78:8;;12916:231;-1:-1:-1;13131:1:8;13124:8;;12804:508;-1:-1:-1;;;;;13270:16:8;;;;;;:8;:16;;;;;13259:42;;13288:12;13259:10;:42::i;:::-;13252:49;;;;905:676:9;1001:14;;969:12;;1001:14;;;;;993:23;;;;;;;;1027:27;1057:37;1069:10;1081:12;1057:11;:37::i;:::-;1027:67;;1130:13;1108:19;:35;1104:78;;;1166:5;1159:12;;;;;1104:78;1397:10;;1386:22;;-1:-1:-1;;;;;1397:10:9;1386;:22::i;:::-;1382:123;;;1448:10;;;1432:61;;;;;;1467:10;1432:61;;;;;;;;;;;;-1:-1:-1;;;;;1448:10:9;;;;1432:34;;:61;;;;;;;;;;;;;;;;;1448:10;1432:61;;;5:2:-1;;;;30:1;27;20:12;5:2;1432:61:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1432:61:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1432:61:9;1424:70;;;;;;;;1520:33;;;;;;;;1527:10;;1520:33;;;;;;;;;;-1:-1:-1;1570:4:9;;905:676;-1:-1:-1;;905:676:9:o;16202:293:8:-;16266:4;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;16281:17:8;16301:18;:16;:18::i;:::-;16281:38;-1:-1:-1;16336:21:8;;;:37;-1:-1:-1;16336:37:8;16328:46;;;;;;16405:64;16422:23;16462:6;16447:12;:21;16405:16;:64::i;2036:33::-;;;;;;;;;;;;;;;-1:-1:-1;;2036:33:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17708:783;17934:7;17957:19;;17953:54;;;17995:12;17978:29;;17953:54;18017:22;18042:12;;;;;;;;;-1:-1:-1;;;;;18042:12:8;-1:-1:-1;;;;;18042:29:8;;18093:4;18112:14;18140:15;18169:18;18201:17;18232;18042:221;;;;;-1:-1:-1;;;18042:221:8;;;;;;;-1:-1:-1;;;;;18042:221:8;-1:-1:-1;;;;;18042:221:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18042:221:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18042:221:8;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18042:221:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18042:221:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18042:221:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18042:221:8;18274:39;;;;;;18302:10;18274:39;;;;;;18042:221;;-1:-1:-1;;;;;;18274:27:8;;;;;:39;;;;;-1:-1:-1;;18274:39:8;;;;;;;;-1:-1:-1;18274:27:8;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18274:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;18398:50:8;;;;;;;;-1:-1:-1;;;;;18398:50:8;;;-1:-1:-1;18398:50:8;;-1:-1:-1;18398:50:8;;;;;;;;18473:10;17708:783;-1:-1:-1;;;;;;17708:783:8:o;9092:130::-;9148:15;9182:33;9194:6;9202:12;9182:11;:33::i;2650:30::-;;;-1:-1:-1;;;;;2650:30:8;;:::o;18822:590::-;18912:4;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;18928:19:8;18950:13;:11;:13::i;:::-;18928:35;-1:-1:-1;18981:24:8;;;:42;-1:-1:-1;18981:42:8;18973:51;;;;;;19056:22;19081:17;19091:6;19081:9;:17::i;:::-;19056:42;-1:-1:-1;19116:27:8;;;:48;-1:-1:-1;19116:48:8;19108:57;;;;;;19197:62;19214:18;19251:7;19234:14;:24;19197:16;:62::i;:::-;-1:-1:-1;;;;;19286:16:8;;;;;;:8;:16;;;;;19269:63;;19304:27;;;19269:16;:63::i;:::-;19347:37;;;;;;;;-1:-1:-1;;;;;19347:37:8;;;19364:1;;-1:-1:-1;;;;;;;;;;;19347:37:8;;;;;;;;-1:-1:-1;19401:4:8;;18822:590;-1:-1:-1;;;;18822:590:8:o;1971:20::-;;;;;;;;;;;;;;;-1:-1:-1;;1971:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13531:915;13966:18;:25;13593:4;;13966:30;;13965:96;;;14048:12;14014:18;14033:1;14014:21;;;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;14014:31:8;:46;13965:96;13961:479;;;14089:11;;-1:-1:-1;;;;;14089:11:8;14081:34;14077:192;;14142:11;;14186:19;;-1:-1:-1;;;;;14142:11:8;;;;:25;;14168:38;;14172:12;;14168:3;:38::i;:::-;14142:65;;;;;-1:-1:-1;;;14142:65:8;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14142:65:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14142:65:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14142:65:8;;-1:-1:-1;14135:72:8;;14077:192;-1:-1:-1;14253:1:8;14246:8;;13961:479;14385:44;14396:18;14416:12;14385:10;:44::i;:::-;14378:51;;;;5680:187;5776:16;;5744:12;;5776:16;;5768:25;;;;;;;;5803:36;5814:10;5826:3;5831:7;5803:10;:36::i;783:116:9:-;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;860:14:9;:32;;;;;;;-1:-1:-1;;860:32:9;;;;;;;;;783:116::o;3530:28:8:-;;;;;;:::o;2837:31::-;;;;:::o;14981:943::-;15430:23;:30;15048:4;;15430:35;;15429:105;;;15521:12;15482:23;15506:1;15482:26;;;;;;;;;;;;;;;;;;;:36;-1:-1:-1;;;;;15482:36:8;:51;15429:105;15425:494;;;15561:11;;-1:-1:-1;;;;;15561:11:8;15553:34;15549:193;;15613:11;;15662:19;;-1:-1:-1;;;;;15613:11:8;;;;:30;;15644:38;;15648:12;;15644:3;:38::i;15425:494::-;15860:49;15871:23;15896:12;15860:10;:49::i;11438:358::-;11543:12;11575:26;11583:8;11593:7;11575;:26::i;:::-;11567:35;;;;;;;;11613:154;;;;;11675:10;11613:154;;;;;;;;;;;;11728:4;11613:154;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11613:48:8;;;;;11675:10;11699:7;;11728:4;11747:10;;11613:154;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11613:154:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11613:154:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;11785:4:8;;11438:358;-1:-1:-1;;;;;;;11438:358:8:o;19642:514::-;19731:4;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;19747:19:8;19769:13;:11;:13::i;:::-;19747:35;-1:-1:-1;19800:25:8;;;;19792:34;;;;;;19836:24;19863:17;19873:6;19863:9;:17::i;:::-;19836:44;-1:-1:-1;19898:30:8;;;;19890:39;;;;;;19939:62;19956:18;19993:7;19976:14;:24;19939:16;:62::i;:::-;-1:-1:-1;;;;;20028:16:8;;;;;;:8;:16;;;;;20011:65;;20046:29;;;20011:16;:65::i;:::-;20091:37;;;;;;;;20116:1;;-1:-1:-1;;;;;20091:37:8;;;-1:-1:-1;;;;;;;;;;;20091:37:8;;;;;;;;-1:-1:-1;20145:4:8;;19642:514;-1:-1:-1;;;;19642:514:8:o;10774:147::-;-1:-1:-1;;;;;10889:15:8;;;10853:17;10889:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;10774:147::o;3743:38::-;;;-1:-1:-1;;;;;3743:38:8;;:::o;20379:124::-;218:10:0;;-1:-1:-1;;;;;218:10:0;204;:24;196:33;;;;;;20460:16:8;:36;;-1:-1:-1;;20460:36:8;;;;;;;;;;20379:124::o;241:25:0:-;;;-1:-1:-1;;;;;241:25:0;;:::o;7386:1571:8:-;7480:12;;7476:163;;;7532:3;-1:-1:-1;;;;;7516:29:8;7525:5;-1:-1:-1;;;;;7516:29:8;-1:-1:-1;;;;;;;;;;;7537:7:8;7516:29;;;;;;;;;;;;;;;;;;7619:7;;7476:163;7660:19;;7682:12;-1:-1:-1;7652:43:8;;;;;;-1:-1:-1;;;;;7790:17:8;;;;;;7789:45;;-1:-1:-1;;;;;;7813:20:8;;7828:4;7813:20;;7789:45;7781:54;;;;;;;;7969:27;7999:32;8011:5;8018:12;7999:11;:32::i;:::-;7969:62;-1:-1:-1;8053:30:8;;;;8045:39;;;;;;8171:10;;8160:22;;-1:-1:-1;;;;;8171:10:8;8160;:22::i;:::-;8156:127;;;8225:10;;;8209:59;;;;;;-1:-1:-1;;;;;8209:59:8;;;;;;;;;;;;;;;;;;;;;;8225:10;;;;;8209:38;;:59;;;;;;;;;;;;;;;;;;8225:10;8209:59;;;5:2:-1;;;;30:1;27;20:12;5:2;8209:59:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8209:59:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8209:59:8;8201:68;;;;;;;;-1:-1:-1;;;;;8427:15:8;;;;;;:8;:15;;;;;8410:64;;8444:29;;;8410:16;:64::i;:::-;8603:25;8631:30;8643:3;8648:12;8631:11;:30::i;:::-;8603:58;-1:-1:-1;8682:27:8;;;:48;-1:-1:-1;8682:48:8;8674:57;;;;;;-1:-1:-1;;;;;8783:13:8;;;;;;:8;:13;;;;;8766:60;;8798:27;;;8766:16;:60::i;:::-;8936:3;-1:-1:-1;;;;;8920:29:8;8929:5;-1:-1:-1;;;;;8920:29:8;-1:-1:-1;;;;;;;;;;;8941:7:8;8920:29;;;;;;;;;;;;;;;;;;7386:1571;;;;;;:::o;21856:587::-;21959:18;;:23;;21958:98;;-1:-1:-1;22008:18:8;;22043:12;;21996:11;;-1:-1:-1;;22008:21:8;;;21996:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;21996:44:8;:59;21958:98;21954:483;;;22123:20;;22075:32;;22110:11;;22123:20;22110:11;22123:20;;;;:::i;:::-;22110:35;;;;;;;;;;;;;;;;;22162:48;;-1:-1:-1;;;;;22227:37:8;;;;;22197:12;22162:48;;-1:-1:-1;;22162:48:8;;;;;;;22227:37;;;;-1:-1:-1;21954:483:8;;;22348:18;;22301:32;;22336:11;;-1:-1:-1;;22348:20:8;;;22336:33;;;;;;;;;;;;;;;22386:37;;-1:-1:-1;;;;;22386:37:8;;;;;;;;;;-1:-1:-1;21954:483:8;21856:587;;:::o;22913:95::-;22965:4;22992:1;22988;:5;:13;;23000:1;22988:13;;;22996:1;22988:13;22981:20;22913:95;-1:-1:-1;;;22913:95:8:o;20877:761::-;20992:18;;20972:4;;20992:23;20988:37;;;-1:-1:-1;21024:1:8;21017:8;;20988:37;21103:18;;21091:11;;-1:-1:-1;;21103:20:8;;;21091:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;21091:43:8;21081:53;;21077:117;;21167:18;;21155:11;;-1:-1:-1;;21167:20:8;;;21155:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;21155:39:8;;-1:-1:-1;21148:46:8;;21077:117;21217:11;21229:1;21217:14;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;21217:24:8;21208:33;;21204:47;;;-1:-1:-1;21250:1:8;21243:8;;21204:47;21346:18;;21313:8;;-1:-1:-1;;21346:20:8;21376:217;21389:3;21383;:9;21376:217;;;21455:16;;21436:1;21420:9;;;21432:1;21420:13;21419:18;;21483:6;;21455:11;;21419:18;;21455:16;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;21455:26:8;:34;21451:132;;21515:3;21509:9;;21451:132;;;21567:1;21563:3;:5;21557:11;;21451:132;21376:217;;;;21609:11;21621:3;21609:16;;;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;21609:22:8;;20877:761;-1:-1:-1;;;;;20877:761:8:o;54:1587:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./MiniMeToken.sol\";\n\ncontract NEC is MiniMeToken {\n\n  constructor(\n    address _tokenFactory,\n    address efxVaultWallet\n  ) public MiniMeToken(\n    _tokenFactory,\n    address(0),                    // no parent token\n    0,                      // no snapshot block number from parent\n    \"Ethfinex Nectar Token\", // Token name\n    18,                     // Decimals\n    \"NEC\",                  // Symbol\n    true                    // Enable transfers\n    ) {\n        generateTokens(efxVaultWallet, 1000000000000000000000000000);\n        enableBurning(false);\n    }\n\n    // Flag that determines if the token can be burned for rewards or not\n    bool public burningEnabled;\n\n\n////////////////\n// Enable token burning by users\n////////////////\n\n    function enableBurning(bool _burningEnabled) public onlyController {\n        burningEnabled = _burningEnabled;\n    }\n\n    function burnAndRetrieve(uint256 _tokensToBurn) public returns (bool success) {\n        require(burningEnabled);\n\n        uint256 previousBalanceFrom = balanceOfAt(msg.sender, block.number);\n        if (previousBalanceFrom < _tokensToBurn) {\n            return false;\n        }\n\n        // Alerts the token controller of the burn function call\n        // If enabled, controller will distribute fees and destroy tokens\n        // Or any other logic chosen by controller\n        if (isContract(controller)) {\n            require(TokenController(controller).onBurn(msg.sender, _tokensToBurn));\n        }\n\n        emit Burned(msg.sender, _tokensToBurn);\n        return true;\n    }\n\n    event Burned(address indexed who, uint256 _amount);\n\n}\n",
  "sourcePath": "/Users/willharborne/Desktop/repos/community-gateway/solidity/contracts/NEC.sol",
  "ast": {
    "absolutePath": "/Users/willharborne/Desktop/repos/community-gateway/solidity/contracts/NEC.sol",
    "exportedSymbols": {
      "NEC": [
        3031
      ]
    },
    "id": 3032,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2927,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/willharborne/Desktop/repos/community-gateway/solidity/contracts/MiniMeToken.sol",
        "file": "./MiniMeToken.sol",
        "id": 2928,
        "nodeType": "ImportDirective",
        "scope": 3032,
        "sourceUnit": 2926,
        "src": "25:27:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2929,
              "name": "MiniMeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2882,
              "src": "70:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeToken_$2882",
                "typeString": "contract MiniMeToken"
              }
            },
            "id": 2930,
            "nodeType": "InheritanceSpecifier",
            "src": "70:11:9"
          }
        ],
        "contractDependencies": [
          36,
          2882
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3031,
        "linearizedBaseContracts": [
          3031,
          2882,
          36
        ],
        "name": "NEC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2957,
              "nodeType": "Block",
              "src": "494:107:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2949,
                        "name": "efxVaultWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2934,
                        "src": "519:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030303030303030303030303030303030",
                        "id": 2950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "535:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "value": "1000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 2948,
                      "name": "generateTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "504:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:60:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2952,
                  "nodeType": "ExpressionStatement",
                  "src": "504:60:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 2954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "588:5:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2953,
                      "name": "enableBurning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "574:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "574:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2956,
                  "nodeType": "ExpressionStatement",
                  "src": "574:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 2958,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2937,
                    "name": "_tokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2932,
                    "src": "182:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "209:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "201:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 2940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "255:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "45746866696e6578204e656374617220546f6b656e",
                    "id": 2942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "323:23:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3bfcbc2b0667ef28059d464abc1809f66b493a4f8d58e6d16d874223c0f6376c",
                      "typeString": "literal_string \"Ethfinex Nectar Token\""
                    },
                    "value": "Ethfinex Nectar Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 2943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "366:2:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e4543",
                    "id": 2944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "406:5:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8494418eb851b795a38dfa5697048e26e5356c4518711fa2ff542406f675b4f2",
                      "typeString": "literal_string \"NEC\""
                    },
                    "value": "NEC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "444:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 2946,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2936,
                  "name": "MiniMeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2882,
                  "src": "165:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MiniMeToken_$2882_$",
                    "typeString": "type(contract MiniMeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "165:328:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2932,
                  "name": "_tokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2958,
                  "src": "104:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "104:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2934,
                  "name": "efxVaultWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2958,
                  "src": "131:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "131:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "98:59:9"
            },
            "returnParameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:9"
            },
            "scope": 3031,
            "src": "87:514:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2960,
            "name": "burningEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3031,
            "src": "681:26:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2959,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "681:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2971,
              "nodeType": "Block",
              "src": "850:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2967,
                      "name": "burningEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2960,
                      "src": "860:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2968,
                      "name": "_burningEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2962,
                      "src": "877:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "860:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2970,
                  "nodeType": "ExpressionStatement",
                  "src": "860:32:9"
                }
              ]
            },
            "documentation": "/////////////",
            "id": 2972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2964,
                  "name": "onlyController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12,
                  "src": "835:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "835:14:9"
              }
            ],
            "name": "enableBurning",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2962,
                  "name": "_burningEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2972,
                  "src": "806:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2961,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:22:9"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:0:9"
            },
            "scope": 3031,
            "src": "783:116:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3023,
              "nodeType": "Block",
              "src": "983:598:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2980,
                        "name": "burningEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2960,
                        "src": "1001:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5389,
                        5390
                      ],
                      "referencedDeclaration": 5389,
                      "src": "993:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "993:23:9"
                },
                {
                  "assignments": [
                    2984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2984,
                      "name": "previousBalanceFrom",
                      "nodeType": "VariableDeclaration",
                      "scope": 3023,
                      "src": "1027:27:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2983,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1027:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2991,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2986,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5386,
                          "src": "1069:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1069:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2988,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5376,
                          "src": "1081:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1081:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2985,
                      "name": "balanceOfAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2253,
                      "src": "1057:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1027:67:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2992,
                      "name": "previousBalanceFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2984,
                      "src": "1108:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2993,
                      "name": "_tokensToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2974,
                      "src": "1130:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1108:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2998,
                  "nodeType": "IfStatement",
                  "src": "1104:78:9",
                  "trueBody": {
                    "id": 2997,
                    "nodeType": "Block",
                    "src": "1145:37:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1166:5:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2978,
                        "id": 2996,
                        "nodeType": "Return",
                        "src": "1159:12:9"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3000,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1397:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2999,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "1386:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3014,
                  "nodeType": "IfStatement",
                  "src": "1382:123:9",
                  "trueBody": {
                    "id": 3013,
                    "nodeType": "Block",
                    "src": "1410:95:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3007,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5386,
                                    "src": "1467:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3008,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1467:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 3009,
                                  "name": "_tokensToBurn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2974,
                                  "src": "1479:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 3004,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "1448:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3003,
                                    "name": "TokenController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3951,
                                    "src": "1432:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenController_$3951_$",
                                      "typeString": "type(contract TokenController)"
                                    }
                                  },
                                  "id": 3005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1432:27:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenController_$3951",
                                    "typeString": "contract TokenController"
                                  }
                                },
                                "id": 3006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "onBurn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3950,
                                "src": "1432:34:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address payable,uint256) external returns (bool)"
                                }
                              },
                              "id": 3010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1432:61:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3002,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5389,
                              5390
                            ],
                            "referencedDeclaration": 5389,
                            "src": "1424:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1424:70:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3012,
                        "nodeType": "ExpressionStatement",
                        "src": "1424:70:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3016,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5386,
                          "src": "1527:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1527:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3018,
                        "name": "_tokensToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "1539:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3015,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "1520:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3020,
                  "nodeType": "EmitStatement",
                  "src": "1515:38:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1570:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2978,
                  "id": 3022,
                  "nodeType": "Return",
                  "src": "1563:11:9"
                }
              ]
            },
            "documentation": null,
            "id": 3024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnAndRetrieve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2974,
                  "name": "_tokensToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "930:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:23:9"
            },
            "returnParameters": {
              "id": 2978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2977,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "969:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2976,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:14:9"
            },
            "scope": 3031,
            "src": "905:676:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3030,
            "name": "Burned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "1600:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "1621:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1599:38:9"
            },
            "src": "1587:51:9"
          }
        ],
        "scope": 3032,
        "src": "54:1587:9"
      }
    ],
    "src": "0:1642:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/willharborne/Desktop/repos/community-gateway/solidity/contracts/NEC.sol",
    "exportedSymbols": {
      "NEC": [
        3031
      ]
    },
    "id": 3032,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2927,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/willharborne/Desktop/repos/community-gateway/solidity/contracts/MiniMeToken.sol",
        "file": "./MiniMeToken.sol",
        "id": 2928,
        "nodeType": "ImportDirective",
        "scope": 3032,
        "sourceUnit": 2926,
        "src": "25:27:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2929,
              "name": "MiniMeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2882,
              "src": "70:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeToken_$2882",
                "typeString": "contract MiniMeToken"
              }
            },
            "id": 2930,
            "nodeType": "InheritanceSpecifier",
            "src": "70:11:9"
          }
        ],
        "contractDependencies": [
          36,
          2882
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3031,
        "linearizedBaseContracts": [
          3031,
          2882,
          36
        ],
        "name": "NEC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2957,
              "nodeType": "Block",
              "src": "494:107:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2949,
                        "name": "efxVaultWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2934,
                        "src": "519:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030303030303030303030303030303030",
                        "id": 2950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "535:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "value": "1000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 2948,
                      "name": "generateTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "504:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:60:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2952,
                  "nodeType": "ExpressionStatement",
                  "src": "504:60:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 2954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "588:5:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2953,
                      "name": "enableBurning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "574:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "574:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2956,
                  "nodeType": "ExpressionStatement",
                  "src": "574:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 2958,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2937,
                    "name": "_tokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2932,
                    "src": "182:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "209:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "201:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 2940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "255:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "45746866696e6578204e656374617220546f6b656e",
                    "id": 2942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "323:23:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3bfcbc2b0667ef28059d464abc1809f66b493a4f8d58e6d16d874223c0f6376c",
                      "typeString": "literal_string \"Ethfinex Nectar Token\""
                    },
                    "value": "Ethfinex Nectar Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 2943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "366:2:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e4543",
                    "id": 2944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "406:5:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8494418eb851b795a38dfa5697048e26e5356c4518711fa2ff542406f675b4f2",
                      "typeString": "literal_string \"NEC\""
                    },
                    "value": "NEC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "444:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 2946,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2936,
                  "name": "MiniMeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2882,
                  "src": "165:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MiniMeToken_$2882_$",
                    "typeString": "type(contract MiniMeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "165:328:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2932,
                  "name": "_tokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2958,
                  "src": "104:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "104:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2934,
                  "name": "efxVaultWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2958,
                  "src": "131:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "131:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "98:59:9"
            },
            "returnParameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:9"
            },
            "scope": 3031,
            "src": "87:514:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2960,
            "name": "burningEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3031,
            "src": "681:26:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2959,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "681:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2971,
              "nodeType": "Block",
              "src": "850:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2967,
                      "name": "burningEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2960,
                      "src": "860:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2968,
                      "name": "_burningEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2962,
                      "src": "877:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "860:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2970,
                  "nodeType": "ExpressionStatement",
                  "src": "860:32:9"
                }
              ]
            },
            "documentation": "/////////////",
            "id": 2972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2964,
                  "name": "onlyController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12,
                  "src": "835:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "835:14:9"
              }
            ],
            "name": "enableBurning",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2962,
                  "name": "_burningEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2972,
                  "src": "806:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2961,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:22:9"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:0:9"
            },
            "scope": 3031,
            "src": "783:116:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3023,
              "nodeType": "Block",
              "src": "983:598:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2980,
                        "name": "burningEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2960,
                        "src": "1001:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5389,
                        5390
                      ],
                      "referencedDeclaration": 5389,
                      "src": "993:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "993:23:9"
                },
                {
                  "assignments": [
                    2984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2984,
                      "name": "previousBalanceFrom",
                      "nodeType": "VariableDeclaration",
                      "scope": 3023,
                      "src": "1027:27:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2983,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1027:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2991,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2986,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5386,
                          "src": "1069:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1069:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2988,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5376,
                          "src": "1081:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1081:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2985,
                      "name": "balanceOfAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2253,
                      "src": "1057:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1027:67:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2992,
                      "name": "previousBalanceFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2984,
                      "src": "1108:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2993,
                      "name": "_tokensToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2974,
                      "src": "1130:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1108:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2998,
                  "nodeType": "IfStatement",
                  "src": "1104:78:9",
                  "trueBody": {
                    "id": 2997,
                    "nodeType": "Block",
                    "src": "1145:37:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1166:5:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2978,
                        "id": 2996,
                        "nodeType": "Return",
                        "src": "1159:12:9"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3000,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1397:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2999,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "1386:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3014,
                  "nodeType": "IfStatement",
                  "src": "1382:123:9",
                  "trueBody": {
                    "id": 3013,
                    "nodeType": "Block",
                    "src": "1410:95:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3007,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5386,
                                    "src": "1467:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3008,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1467:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 3009,
                                  "name": "_tokensToBurn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2974,
                                  "src": "1479:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 3004,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "1448:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3003,
                                    "name": "TokenController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3951,
                                    "src": "1432:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenController_$3951_$",
                                      "typeString": "type(contract TokenController)"
                                    }
                                  },
                                  "id": 3005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1432:27:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenController_$3951",
                                    "typeString": "contract TokenController"
                                  }
                                },
                                "id": 3006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "onBurn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3950,
                                "src": "1432:34:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address payable,uint256) external returns (bool)"
                                }
                              },
                              "id": 3010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1432:61:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3002,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5389,
                              5390
                            ],
                            "referencedDeclaration": 5389,
                            "src": "1424:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1424:70:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3012,
                        "nodeType": "ExpressionStatement",
                        "src": "1424:70:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3016,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5386,
                          "src": "1527:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1527:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3018,
                        "name": "_tokensToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "1539:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3015,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "1520:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3020,
                  "nodeType": "EmitStatement",
                  "src": "1515:38:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1570:4:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2978,
                  "id": 3022,
                  "nodeType": "Return",
                  "src": "1563:11:9"
                }
              ]
            },
            "documentation": null,
            "id": 3024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnAndRetrieve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2974,
                  "name": "_tokensToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "930:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:23:9"
            },
            "returnParameters": {
              "id": 2978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2977,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "969:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2976,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:14:9"
            },
            "scope": 3031,
            "src": "905:676:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3030,
            "name": "Burned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "1600:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "1621:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1599:38:9"
            },
            "src": "1587:51:9"
          }
        ],
        "scope": 3032,
        "src": "54:1587:9"
      }
    ],
    "src": "0:1642:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-18T00:19:03.048Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "This function makes it easy to read the `allowed[]` map",
        "params": {
          "_owner": "The address of the account that owns the token",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "True if the approval was successful"
      },
      "approveAndCall(address,uint256,bytes)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the contract able to transfer the tokens"
        },
        "return": "True if the function call was successful"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address that's balance is being requested"
        },
        "return": "The balance of `_owner` at the current block"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_owner": "The address from which the balance will be retrieved"
        },
        "return": "The balance at `_blockNumber`"
      },
      "changeController(address)": {
        "params": {
          "_newController": "The new controller of the contract"
        }
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "params": {
          "_cloneDecimalUnits": "Number of decimals of the smallest unit",
          "_cloneTokenName": "Name of the clone token",
          "_cloneTokenSymbol": "Symbol of the clone token",
          "_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
          "_transfersEnabled": "True if transfers are allowed in the clone"
        },
        "return": "The address of the new MiniMeToken Contract"
      },
      "destroyTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens to burn",
          "_owner": "The address that will lose the tokens"
        },
        "return": "True if the tokens are burned correctly"
      },
      "enableTransfers(bool)": {
        "params": {
          "_transfersEnabled": "True if transfers are allowed in the clone"
        }
      },
      "generateTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens generated",
          "_owner": "The address that will be assigned the new tokens"
        },
        "return": "True if the tokens are generated correctly"
      },
      "pledgeFees(uint256)": {
        "params": {
          "_value": "The amount sent to the vault by controller, reserved for token holders"
        }
      },
      "reducePledgedFees(uint256)": {
        "params": {
          "_value": "The amount of pledged fees which are being distributed to token holders, reducing liability"
        }
      },
      "totalPledgedFees()": {
        "details": "This function makes it easy to get the total pledged fees",
        "return": "The total number of fees belonging to token holders"
      },
      "totalPledgedFeesAt(uint256)": {
        "params": {
          "_blockNumber": "The block number when the totalPledgedFees is queried"
        },
        "return": "The total amount of pledged fees at `_blockNumber`"
      },
      "totalSupply()": {
        "details": "This function makes it easy to get the total number of tokens",
        "return": "The total number of tokens"
      },
      "totalSupplyAt(uint256)": {
        "params": {
          "_blockNumber": "The block number when the totalSupply is queried"
        },
        "return": "The total amount of tokens at `_blockNumber`"
      },
      "transfer(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_to": "The address of the recipient"
        },
        "return": "Whether the transfer was successful or not"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
      },
      "balanceOfAt(address,uint256)": {
        "notice": "/////////////"
      },
      "changeController(address)": {
        "notice": "Changes the controller of the contract"
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
      },
      "destroyTokens(address,uint256)": {
        "notice": "Burns `_amount` tokens from `_owner`"
      },
      "enableBurning(bool)": {
        "notice": "/////////////"
      },
      "enableTransfers(bool)": {
        "notice": "/////////////Enables token holders to transfer their tokens freely if true"
      },
      "generateTokens(address,uint256)": {
        "notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
      },
      "pledgeFees(uint256)": {
        "notice": "/////////////Pledges fees to the token holders, later to be claimed by burning"
      },
      "reducePledgedFees(uint256)": {
        "notice": "Reduces pledged fees to the token holders, i.e. during upgrade or token burning"
      },
      "totalPledgedFees()": {
        "notice": "/////////////"
      },
      "totalPledgedFeesAt(uint256)": {
        "notice": "Total amount of fees at a specific `_blockNumber`."
      },
      "totalSupplyAt(uint256)": {
        "notice": "Total amount of tokens at a specific `_blockNumber`."
      },
      "transfer(address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `msg.sender`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
      }
    }
  }
}